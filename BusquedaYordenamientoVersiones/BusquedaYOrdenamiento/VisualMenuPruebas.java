/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package byo;


import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
/**
 *
 * @author diego
 */
public class VisualMenuPruebas extends javax.swing.JFrame {
    //Objeto de tipo arreglo
    Arreglo b;
    //Variables para calcular el tiempo de ejecucion
    long TInicio, TFin, tiempo;
    //Lista para almacenar los tiempos de prueba
    List <Long> tempo;
    
    private static VisualMenuPrincipal formularioPrincipal;
    /**
     * Creates new form VisualMenuPruebas
     */
    public VisualMenuPruebas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Instacia = new javax.swing.JTextField();
        Min = new javax.swing.JTextField();
        Max = new javax.swing.JTextField();
        GenerarBoton = new javax.swing.JButton();
        SalirBoton = new javax.swing.JButton();
        OrdenaBurbujaBoton = new javax.swing.JButton();
        OrdenaBurbujaBanderaBoton = new javax.swing.JButton();
        OrdenaSacudidaBoton = new javax.swing.JButton();
        OrdenaQuicksortBoton = new javax.swing.JButton();
        BuscaSecuencialBoton = new javax.swing.JButton();
        BuscaSecuencialCentinelaBoton = new javax.swing.JButton();
        MenuPrincipalBoton = new javax.swing.JButton();
        BuscaBinariaBoton = new javax.swing.JButton();
        BuscaInterpolacionBoton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Menú de Pruebas");

        jLabel2.setText("Ingresa la cantidad de numeros por generar: ");

        jLabel3.setText("Ingresa el valor mínimo del rango: ");

        jLabel4.setText("Ingresa el valor máximo del rango:");

        Instacia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InstaciaActionPerformed(evt);
            }
        });

        GenerarBoton.setText("Generar");
        GenerarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerarBotonActionPerformed(evt);
            }
        });

        SalirBoton.setText("EXIT!!");
        SalirBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirBotonActionPerformed(evt);
            }
        });

        OrdenaBurbujaBoton.setText("Ordena por burbuja");
        OrdenaBurbujaBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrdenaBurbujaBotonActionPerformed(evt);
            }
        });

        OrdenaBurbujaBanderaBoton.setText("Ordena por burbuja-bandera");
        OrdenaBurbujaBanderaBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrdenaBurbujaBanderaBotonActionPerformed(evt);
            }
        });

        OrdenaSacudidaBoton.setText("Ordenamiento por sacudida");
        OrdenaSacudidaBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrdenaSacudidaBotonActionPerformed(evt);
            }
        });

        OrdenaQuicksortBoton.setText("Ordenamiento por quicksort");
        OrdenaQuicksortBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrdenaQuicksortBotonActionPerformed(evt);
            }
        });

        BuscaSecuencialBoton.setText("Búsqueda secuencial");
        BuscaSecuencialBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscaSecuencialBotonActionPerformed(evt);
            }
        });

        BuscaSecuencialCentinelaBoton.setText("Búsqueda secuencial con centinela");
        BuscaSecuencialCentinelaBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscaSecuencialCentinelaBotonActionPerformed(evt);
            }
        });

        MenuPrincipalBoton.setText("Menú principal");
        MenuPrincipalBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuPrincipalBotonActionPerformed(evt);
            }
        });

        BuscaBinariaBoton.setText("Busqueda binaria");
        BuscaBinariaBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscaBinariaBotonActionPerformed(evt);
            }
        });

        BuscaInterpolacionBoton.setText("Busqueda por interpolación");
        BuscaInterpolacionBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscaInterpolacionBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(SalirBoton)
                                .addGap(61, 61, 61)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(GenerarBoton)
                            .addComponent(Instacia, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(Min)
                            .addComponent(Max))
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(OrdenaSacudidaBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(OrdenaBurbujaBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BuscaSecuencialBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BuscaBinariaBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BuscaSecuencialCentinelaBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(OrdenaQuicksortBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(OrdenaBurbujaBanderaBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BuscaInterpolacionBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(MenuPrincipalBoton)))))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Instacia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GenerarBoton)
                    .addComponent(SalirBoton))
                .addContainerGap(130, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OrdenaBurbujaBoton)
                    .addComponent(OrdenaBurbujaBanderaBoton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OrdenaSacudidaBoton)
                    .addComponent(OrdenaQuicksortBoton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BuscaSecuencialBoton)
                    .addComponent(BuscaSecuencialCentinelaBoton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BuscaBinariaBoton)
                    .addComponent(BuscaInterpolacionBoton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(MenuPrincipalBoton)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OrdenaQuicksortBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrdenaQuicksortBotonActionPerformed
        // TODO add your handling code here:
        int derecha=b.m.size()-1;
        int izquierda=0;
        int j;
        long promedio;
        tempo = new ArrayList<>();
        j=0;
        while(j<20){
            b.creaArreglo();
            TInicio = System.currentTimeMillis();
            b.ordenaQuicksort(izquierda, derecha);
            TFin = System.currentTimeMillis();
            tiempo = TFin - TInicio;
            tempo.add(tiempo);
            b.destruye();
            j++;
        }
        //b.escribeTiempos(tempo);
        promedio = b.calculaPromedio(tempo);
        tempo.clear();
        JOptionPane.showMessageDialog(null,"\nOrdenar por quicksort terminado\n" 
                        + "\nTiempo promedio de ejecución: " + promedio + "\n" );
    }//GEN-LAST:event_OrdenaQuicksortBotonActionPerformed

    private void InstaciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InstaciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InstaciaActionPerformed

    private void SalirBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirBotonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_SalirBotonActionPerformed

    private void GenerarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerarBotonActionPerformed
        // TODO add your handling code here:
        String c = Instacia.getText();
        String mi = Min.getText();
        String ma = Max.getText();
        
        int c1 = Integer.parseInt(c);
        int mi1 = Integer.parseInt(mi);
        int ma1 = Integer.parseInt(ma);
        
        this.b = new Arreglo(c1, mi1, ma1);
        b.creaArreglo();
        JOptionPane.showMessageDialog(null, "Instancia: " + c1 + "\n"
                + "Valor mínimo: " + mi1 + "\n" + "Valor Máximo: " + ma1 + "\n");
    }//GEN-LAST:event_GenerarBotonActionPerformed

    private void BuscaSecuencialBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscaSecuencialBotonActionPerformed
        // TODO add your handling code here:
        int j,number;
        long promedio;
        tempo = new ArrayList<>();
        j=0;
        while(j<20){
            b.creaArreglo();
            number = (int)(Math.random()*(b.max-b.min)+b.min);
            TInicio = System.nanoTime();
            b.busquedaSecuencial(number);
            TFin = System.nanoTime();
            tiempo = TFin - TInicio;
            tempo.add(tiempo);
            b.m.clear();
            j++;
        }
        //b.escribeTiempos(tempo);
        promedio = b.calculaPromedio(tempo);
        tempo.clear();
        JOptionPane.showMessageDialog(null, "Buscar por secuencial terminado\n" 
                        + "tiempo promedio de ejecución: " + promedio + "\n" );
    }//GEN-LAST:event_BuscaSecuencialBotonActionPerformed

    private void BuscaSecuencialCentinelaBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscaSecuencialCentinelaBotonActionPerformed
        // TODO add your handling code here:
        int j,number;
        long promedio;
        tempo = new ArrayList<>();
        j=0;
        while(j<20){
            b.creaArreglo();
            number = (int)(Math.random()*(b.max-b.min)+b.min);
            TInicio = System.nanoTime();
            b.busquedaSecuencialCentinela(number);
            TFin = System.nanoTime();
            tiempo = TFin - TInicio;
            tempo.add(tiempo);
            b.m.clear();
            j++;
        }
        //b.escribeTiempos(tempo);
        promedio = b.calculaPromedio(tempo);
        tempo.clear();
        JOptionPane.showMessageDialog(null,"Buscar por secuencial con centinela terminado\n" 
                        + "tiempo promedio de ejecución: " + promedio + "\n" );
    }//GEN-LAST:event_BuscaSecuencialCentinelaBotonActionPerformed

    private void BuscaBinariaBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscaBinariaBotonActionPerformed
        // TODO add your handling code here:
        int derecha=b.m.size()-1;
        int izquierda=0;
        int j,number;
        long promedio;
        tempo = new ArrayList<>();
        j=0;
        while(j<20){
            b.creaArreglo();
            b.ordenaQuicksort(izquierda, derecha);
            number = (int)(Math.random()*(b.max-b.min)+b.min);
            TInicio = System.nanoTime();
            b.busquedaBinaria(number);
            TFin = System.nanoTime();
            tiempo = TFin - TInicio;
            tempo.add(tiempo);
            b.m.clear();
            j++;
        }
        //b.escribeTiempos(tempo);
        promedio = b.calculaPromedio(tempo);
        tempo.clear();
        JOptionPane.showMessageDialog(null, "Buscar por binaria terminado\n" 
                        + "tiempo promedio de ejecución: " + promedio + "\n" );
    }//GEN-LAST:event_BuscaBinariaBotonActionPerformed

    private void BuscaInterpolacionBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscaInterpolacionBotonActionPerformed
        // TODO add your handling code here:
        int derecha=b.m.size()-1;
        int izquierda=0;
        int j,number;
        long promedio;
        tempo = new ArrayList<>();
        j=0;
        while(j<20){
            b.creaArreglo();
            b.ordenaQuicksort(izquierda, derecha);
            number = (int)(Math.random()*(b.max-b.min)+b.min);
            TInicio = System.nanoTime();
            b.busquedaBinaria(number);
            TFin = System.nanoTime();
            tiempo = TFin - TInicio;
            tempo.add(tiempo);
            b.m.clear();
            j++;
        }
        //b.escribeTiempos(tempo);
        promedio = b.calculaPromedio(tempo);
        tempo.clear();
        JOptionPane.showMessageDialog(null,"Buscar por interpolacion terminado\n" 
                        + "tiempo promedio de ejecución: " + promedio + "\n" );
    }//GEN-LAST:event_BuscaInterpolacionBotonActionPerformed

    private void OrdenaBurbujaBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrdenaBurbujaBotonActionPerformed
        // TODO add your handling code here:
        int j;
        long promedio;
        tempo = new ArrayList<>();
        j=0;
        while(j<20){
            b.creaArreglo();
            TInicio = System.currentTimeMillis();
            b.ordenaBurbuja();
            TFin = System.currentTimeMillis();
            tiempo = TFin - TInicio;
            tempo.add(tiempo);
            b.m.clear();
            j++;
        }
        //b.escribeTiempos(tempo);
        promedio = b.calculaPromedio(tempo);
        tempo.clear();
        JOptionPane.showMessageDialog(null, "Ordenar por burbuja terminado\n" 
                        + "tiempo promedio de ejecución: " + promedio + "\n" );
    }//GEN-LAST:event_OrdenaBurbujaBotonActionPerformed

    private void OrdenaBurbujaBanderaBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrdenaBurbujaBanderaBotonActionPerformed
        // TODO add your handling code here:
        int j;
        long promedio;
        tempo = new ArrayList<>();
        j=0;
        while(j<20){
            b.creaArreglo();
            TInicio = System.currentTimeMillis();
            b.ordenaBurbujaBandera();
            TFin = System.currentTimeMillis();
            tiempo = TFin - TInicio;
            tempo.add(tiempo);
            b.m.clear();
            j++;
        }
        //b.escribeTiempos(tempo);
        promedio = b.calculaPromedio(tempo);
        tempo.clear();
        JOptionPane.showMessageDialog(null,"Ordenar por burbuja con bandera terminado\n" 
                        + "tiempo promedio de ejecución: " + promedio + "\n" );
    }//GEN-LAST:event_OrdenaBurbujaBanderaBotonActionPerformed

    private void OrdenaSacudidaBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrdenaSacudidaBotonActionPerformed
        // TODO add your handling code here:
        int j;
        long promedio;
        tempo = new ArrayList<>();
        j=0;
        while(j<20){
            b.creaArreglo();
            TInicio = System.currentTimeMillis();
            b.ordenaSacudida();
            TFin = System.currentTimeMillis();
            tiempo = TFin - TInicio;
            tempo.add(tiempo);
            b.m.clear();
            j++;
        }
        //b.escribeTiempos(tempo);
        promedio = b.calculaPromedio(tempo);
        tempo.clear();
        JOptionPane.showMessageDialog(null, "Ordenar por sacudida terminado\n" 
                        + "tiempo promedio de ejecución: " + promedio + "\n" );
    }//GEN-LAST:event_OrdenaSacudidaBotonActionPerformed

    private void MenuPrincipalBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuPrincipalBotonActionPerformed
        // TODO add your handling code here:
        formularioPrincipal = new VisualMenuPrincipal();
        formularioPrincipal.setVisible(true);
        dispose();
    }//GEN-LAST:event_MenuPrincipalBotonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VisualMenuPruebas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VisualMenuPruebas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VisualMenuPruebas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VisualMenuPruebas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new VisualMenuPruebas().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BuscaBinariaBoton;
    private javax.swing.JButton BuscaInterpolacionBoton;
    private javax.swing.JButton BuscaSecuencialBoton;
    private javax.swing.JButton BuscaSecuencialCentinelaBoton;
    private javax.swing.JButton GenerarBoton;
    private javax.swing.JTextField Instacia;
    private javax.swing.JTextField Max;
    private javax.swing.JButton MenuPrincipalBoton;
    private javax.swing.JTextField Min;
    private javax.swing.JButton OrdenaBurbujaBanderaBoton;
    private javax.swing.JButton OrdenaBurbujaBoton;
    private javax.swing.JButton OrdenaQuicksortBoton;
    private javax.swing.JButton OrdenaSacudidaBoton;
    private javax.swing.JButton SalirBoton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
